name: Build and Archive Jars

on:
  push:
    branches:
      - origin  # Change this to your branch name if it's called "origin"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: 'adopt'

    - name: Build the project
      run: ./gradlew build  # Replace with your build command

    - name: Archive Jars
      run: |
        commit_hash=$(git rev-parse --short HEAD)
        jar_files=$(find build/libs -name "*.jar")
        if [ -n "$jar_files" ]; then
          mkdir -p builds/commits
          zip -j builds/commits/${commit_hash}.zip ${jar_files}

          # Create a GitHub release
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{
              "tag_name": "v'${commit_hash}'",
              "name": "Release '${commit_hash}'",
              "body": "New build available for commit '${commit_hash}'",
              "draft": false,
              "prerelease": false
            }' \
            "https://api.github.com/repos/${{ github.repository }}/releases"

          # Upload the zip file to the release
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/zip" \
            --data-binary "@builds/commits/${commit_hash}.zip" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/${commit_hash}/assets?name=${commit_hash}.zip"
        fi
      shell: bash
