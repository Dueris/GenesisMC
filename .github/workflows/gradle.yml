name: Build and Archive Jars

on:
  push:
    branches:
      - origin

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: 'adopt'

    - name: Build and Publish
      run: |
        chmod +x ./gradlew
        ./gradlew build
        ./gradlew publish
        ./gradlew createNonShadowedJar
      env:
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}

    - name: Install Cloudsmith CLI
      run: |
        pip install --upgrade cloudsmith-cli
      env:
        PIP_NO_CACHE_DIR: "false"

    - name: Prepare POM
      run: |
        echo "POM-PRINT-START"
        # Print the POM file
        echo "Generated Pom file:"
        cat .github/genesis-origin-mc1.20-v0.2.2.pom
      env:
        CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
          
    - name: Push to Cloudsmith
      id: push
      uses: cloudsmith-io/action@master
      with:
        api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
        command: 'push'
        format: 'maven'
        owner: 'genesismc'
        repo: 'genesismc'
        pom-file: '.github/genesis-origin-mc1.20-v0.2.2.pom'
        republish: 'true'
        file: 'mainPlugin/build/libs/mainPlugin-mc1.20-v0.2.2.jar'
    
    - name: Archive Jars
      run: |
        commit_hash=$(git rev-parse --short HEAD)
        jar_files=$(find mainPlugin/build/libs -name "*.jar")
        if [ -n "$jar_files" ]; then
          zip -j builds/commits/${commit_hash}.zip ${jar_files}
          if [ -f "builds/commits/${commit_hash}.zip" ]; then
            if [ ! -f "builds/commits/${commit_hash}.zip.bak" ]; then
              cp builds/commits/${commit_hash}.zip builds/commits/${commit_hash}.zip.bak
            fi
          fi
        fi
        commit_hash=$(git rev-parse --short HEAD)
        jar_files=$(find build/libs -name "*.jar")
        if [ -n "$jar_files" ]; then
          zip -j builds/commits/${commit_hash}.zip ${jar_files}
          if [ -f "builds/commits/${commit_hash}.zip" ]; then
            if [ ! -f "builds/commits/${commit_hash}.zip.bak" ]; then
              cp builds/commits/${commit_hash}.zip builds/commits/${commit_hash}.zip.bak
            fi
          fi
        fi
      shell: bash

    - name: Commit and Push Archive
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git config --global user.email "actions@github.com"
        git config --global user.name "github-actions"
        git config --global credential.helper 'store --file ~/.git-credentials'
        echo "https://github.com/Dueris/GenesisMC:${{ secrets.GH_TOKEN }}" > ~/.git-credentials
        if [ -f "builds/commits/${commit_hash}.zip" ]; then
          git add builds/commits/${commit_hash}.zip
          git commit -m "Add archive for commit ${commit_hash}"
          git push
        fi

    - name: Notify Discord
      if: ${{ (success() || failure()) }}
      uses: Tim203/actions-git-discord-webhook@70f38ded3aca51635ec978ab4e1a58cd4cd0c2ff
      with:
        webhook_url: ${{ secrets.DISCORD_WEBHOOK }}
        status: ${{ job.status }}
