name: Publish to GitHub Packages

on:
  push:
    branches:
      - origin  # Adjust the branch name as needed

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'  # Adjust the Java version as needed
          distribution: 'adopt'  # Specify the distribution (e.g., 'adopt', 'adopt-openj9', 'adopt-hotspot')

      - name: Build
        run: |
          ./gradlew build
          # Print the contents of the build directory
          echo "Contents of the build directory:"
          ls -R build

        env:
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}  # Updated to use GIT_TOKEN

      - name: Install Cloudsmith CLI
        run: |
          pip install --upgrade cloudsmith-cli
        env:
          PIP_NO_CACHE_DIR: "false"

      - name: Upload via Cloudsmith CLI
        run: |
          echo "Uploading to Cloudsmith"
          cloudsmith push maven Dueris/GenesisMC build/libs/genesis-standalone-mc1.20-v0.2.2.jar --pom-file=genesismc-mc1.20-0.2.2.pom

          # Print the POM file if it exists
          if [ -f "genesismc-mc1.20-0.2.2.pom" ]; then
            echo "Generated Pom file:"
            cat genesismc-mc1.20-0.2.2.pom
          else
            echo "RIP no file"
          fi

          # Check for the publications directory
          if [ -d "build/publications" ]; then
            echo "Contents of the publications directory:"
            ls -R build/publications
          else
            echo "No publications dir"
          fi

        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}  # Replace with your Cloudsmith API
