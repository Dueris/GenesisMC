package me.dueris.genesismc.factory.powers.player.damage;

import me.dueris.genesismc.entity.OriginPlayer;
import me.dueris.genesismc.factory.conditions.ConditionExecutor;
import me.dueris.genesismc.factory.powers.CraftPower;
import me.dueris.genesismc.utils.OriginContainer;
import me.dueris.genesismc.utils.PowerContainer;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityDamageEvent;

import java.util.ArrayList;

public class InvulnerabilityDamage extends CraftPower implements Listener {

    @Override
    public void setActive(String tag, Boolean bool) {
        if (powers_active.containsKey(tag)) {
            powers_active.replace(tag, bool);
        } else {
            powers_active.put(tag, bool);
        }
    }


    @EventHandler
    public void DamageEvent(EntityDamageEvent e) {
        if (e.getEntity() instanceof Player p) {
            if (dmg_invulnerable.contains(p)) {
                for (OriginContainer origin : OriginPlayer.getOrigin(p).values()) {
                    for (PowerContainer power : origin.getMultiPowerFileFromType(getPowerFile())) {
                        if (power != null) {
                            ConditionExecutor executor = new ConditionExecutor();
                            if (executor.check("condition", "conditions", p, power, getPowerFile(), p, null, null, null, p.getItemInHand(), e)) {
                                if (executor.check("damage_condition", "damage_conditions", p, power, getPowerFile(), p, null, null, null, p.getItemInHand(), e)) {
                                    if (power == null) {
                                        getPowerArray().remove(p);
                                        return;
                                    }
                                    if (!getPowerArray().contains(p)) return;
                                    setActive(power.getTag(), true);
                                    e.setCancelled(true);
                                    e.setDamage(0);
                                } else {
                                    if (power == null) {
                                        getPowerArray().remove(p);
                                        return;
                                    }
                                    if (!getPowerArray().contains(p)) return;
                                    setActive(power.getTag(), false);
                                }
                            } else {
                                if (power == null) {
                                    getPowerArray().remove(p);
                                    return;
                                }
                                if (!getPowerArray().contains(p)) return;
                                setActive(power.getTag(), false);
                            }
                        }
                    }
                }

            }
        }
    }

    Player p;

    public InvulnerabilityDamage() {
        this.p = p;
    }

    @Override
    public void run(Player p) {

    }

    @Override
    public String getPowerFile() {
        return "origins:invulnerability";
    }

    @Override
    public ArrayList<Player> getPowerArray() {
        return dmg_invulnerable;
    }
}
