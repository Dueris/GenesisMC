plugins {
    id 'java'
    id("maven-publish")
    id("io.papermc.paperweight.userdev") version "1.5.5"
    id("xyz.jpenilla.run-paper") version "2.2.0"
}
apply plugin: 'java'
apply plugin: 'maven-publish'
group = 'me.dueris'
version = 'mc1.20-v0.2.2'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven {
        url = "https://mvnrepository.com/artifact/org.javassist/javassist"
    }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "opencollab-snapshot-repo"
        url = "https://repo.opencollab.dev/main/"
    }
    maven { url 'https://repo.inventivetalent.org/repository/public/' }
    maven {
        url = "https://repo.codemc.org/repository/maven-releases/"
    }
    maven { url = "https://jitpack.io"}
    maven { url = "https://repo.spongepowered.org/repository/maven-public/"}
}

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(17))
}

configurations {
    shade
}

dependencies {
    implementation project(path: ':mainPlugin')
    paperweight.paperDevBundle("1.20.2-R0.1-SNAPSHOT")
    compileOnly("io.papermc.paperweight:paperweight-userdev:1.3.6")
    compileOnly("org.spongepowered:mixin:0.8.5-SNAPSHOT")
    compileOnly("space.vectrix.ignite:ignite-api:0.8.1")
}

jar {
    dependsOn configurations.shade
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)

    from {
        configurations.shade.collect { it.isDirectory() ? it : zipTree(it) }
    }
    delete {fileName ->
        if(fileName.toString().endsWith("-dev.jar")){
            delete(jar)
        }
    }
}

tasks {
    // Configure reobfJar to run when invoking the build task
    assemble {
        dependsOn(reobfJar)
    }
}

task copyToLib(type: Copy, dependsOn: [jar, reobfJar]) {
    from 'build/libs'
    into '../build/libs'
    include '**/*.jar'
    rename { fileName ->
        if (fileName.startsWith("")) {
            fileName = fileName.replace("mixin", "genesis-mixn")
        }
        fileName
    }
    exclude { file ->
        file.name.startsWith("bundled")
    }
}

jar {
    includeEmptyDirs = false
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
        mavenLocal()
    }
}

build.dependsOn jar, copyToLib
